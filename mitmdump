#!/usr/bin/env python
import sys, argparse, signal
# The unneccesary console import here is to work around a bug in pyinstaller
from libmproxy import proxy, dump, cmdline, version, console

if __name__ == '__main__':
    parser = argparse.ArgumentParser(usage = "%(prog)s [options] [filter]")
    cmdline.common_options(parser)

    # Add arguments unique to mitmdump
    parser.add_argument(
        "--keepserving",
        action="store_true", dest="keepserving", default=False,
        help="Continue serving after client playback or file read. We exit by default."
    )
    parser.add_argument(
        'args', nargs=argparse.REMAINDER
    )

    options = parser.parse_args()
    server = proxy.get_server(parser,options)

    try:
        dumpopts = dump.Options(**cmdline.get_common_options(options))
    except cmdline.OptionException, v:
        parser.error(v.message)
    dumpopts.keepserving = options.keepserving

    if options.args:
        filt = " ".join(options.args)
    else:
        filt = None

    try:
        m = dump.DumpMaster(server, dumpopts, filt)
        def cleankill(*args, **kwargs):
            m.shutdown()
        signal.signal(signal.SIGTERM, cleankill)
        m.run()
    except dump.DumpError, e:
        print >> sys.stderr, "mitmdump:", e
        sys.exit(1)
    except KeyboardInterrupt:
        pass